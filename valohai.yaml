---
- step:
    name: preprocess-dataset
    image: docker.io/python:3.9
    command:
      - pip install numpy==1.26.4
      - python ./preprocess_dataset.py
    inputs:
      - name: dataset
        #default: dataset://audio/latest
        default: https://valohaidemo.blob.core.windows.net/mnist/mnist.npz
        #default: s3://mybucket/data/sample/*
        #default: gs://mybucket/data/sample/mnist.npz
        #default: azure://dd-sample-storage/blob/data/sample/mnist.npz






- step:
    name: fetch-data-bq
    image: python:3.7
    command:
      - pip install google-cloud-bigquery[bqstorage,pandas]
      - python ./fetch.py {parameters}

- step:
    name: train-model
    image: europe-west4-docker.pkg.dev/valohai-dev/valohai/tensorflow:2.16.1
    command:
      - pip install /valohai/inputs/simulator/*.whl
      - python ./train_model.py {parameters}
    parameters:
      - name: epochs
        default: 5
        type: integer
        category: tuning
      - name: learning_rate
        default: 0.001
        type: float
        category: tuning
      - name: simulator_version
        default: 0.4.0
        type: string
        category: configs
    inputs:
      - name: dataset
        default: https://valohaidemo.blob.core.windows.net/mnist/preprocessed_mnist.npz
      - name: simulator
        default: dataset://simulator/{parameter:simulator_version}
        #default: gs://dd-sample-bucket/simulators/valohai_utils-{parameter:simulator_version}-py3-none-any.whl

- step:
    name: batch-inference
    image: tensorflow/tensorflow:2.6.0
    command:
    - pip install pillow valohai-utils
    - python ./batch_inference.py
    inputs:
    - name: model
    - name: images
      default:
      - https://valohaidemo.blob.core.windows.net/mnist/four-inverted.png
      - https://valohaidemo.blob.core.windows.net/mnist/five-inverted.png
      - https://valohaidemo.blob.core.windows.net/mnist/five-normal.jpg

- step:
    name: compare-predictions
    image: python:3.9
    command:
      - pip install numpy valohai-utils
      - python ./compare_predictions.py
    inputs:
      - name: predictions
      - name: models
        optional: true

- pipeline:
    name: training-pipeline
    nodes:
      - name: preprocess
        type: execution
        step: preprocess-dataset
      - name: train
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: evaluate
        type: execution
        step: batch-inference
    edges:
      - [preprocess.output.*, train.input.dataset]
      - [train.output.model*, evaluate.input.model]

- pipeline:
    name: three-trainings-pipeline
    nodes:
      - name: preprocess
        type: execution
        step: preprocess-dataset
      - name: train1
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train2
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train3
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: evaluate1
        type: execution
        step: batch-inference
      - name: evaluate2
        type: execution
        step: batch-inference
      - name: evaluate3
        type: execution
        step: batch-inference
      - name: find-best-model
        type: execution
        step: compare-predictions
    edges:
      - [preprocess.output.preprocessed_mnist.npz, train1.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train2.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train3.input.dataset]
      - [train1.output.model*, evaluate1.input.model]
      - [train2.output.model*, evaluate2.input.model]
      - [train3.output.model*, evaluate3.input.model]
      - [evaluate1.output.*.json, find-best-model.input.predictions]
      - [evaluate2.output.*.json, find-best-model.input.predictions]
      - [evaluate3.output.*.json, find-best-model.input.predictions]
      - [evaluate1.input.model*, find-best-model.input.models]
      - [evaluate2.input.model*, find-best-model.input.models]
      - [evaluate3.input.model*, find-best-model.input.models]

- pipeline:
    name: three-trainings-pipeline-w-deployment
    nodes:
      - name: preprocess
        type: execution
        step: preprocess-dataset
      - name: train1
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train2
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train3
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: evaluate1
        type: execution
        step: batch-inference
      - name: evaluate2
        type: execution
        step: batch-inference
      - name: evaluate3
        type: execution
        step: batch-inference
      - name: find-best-model
        type: execution
        step: compare-predictions
      - name: deploy
        type: deployment
        deployment: deployment-test
        actions:
          - when: node-starting
            then: require-approval
        endpoints:
          - predict-digit
    edges:
      - [preprocess.output.preprocessed_mnist.npz, train1.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train2.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train3.input.dataset]
      - [train1.output.model*, evaluate1.input.model]
      - [train2.output.model*, evaluate2.input.model]
      - [train3.output.model*, evaluate3.input.model]
      - [evaluate1.output.*.json, find-best-model.input.predictions]
      - [evaluate2.output.*.json, find-best-model.input.predictions]
      - [evaluate3.output.*.json, find-best-model.input.predictions]
      - [evaluate1.input.model*, find-best-model.input.models]
      - [evaluate2.input.model*, find-best-model.input.models]
      - [evaluate3.input.model*, find-best-model.input.models]
      - [find-best-model.output.model*, deploy.file.predict-digit.model]

- pipeline:
    name: three-trainings-pipeline-w-deployment-broken
    nodes:
      - name: preprocess
        type: execution
        step: preprocess-dataset
      - name: train1
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train2
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: train3
        type: execution
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: evaluate1
        type: execution
        step: batch-inference
      - name: evaluate2
        type: execution
        step: batch-inference
      - name: evaluate3
        type: execution
        step: batch-inference
        override:
          image: python/python:3.12.0b1-slim-buster
      - name: find-best-model
        type: execution
        step: compare-predictions
      - name: deploy
        type: deployment
        deployment: deployment-test
        actions:
          - when: node-starting
            then: require-approval
        endpoints:
          - predict-digit
    edges:
      - [preprocess.output.preprocessed_mnist.npz, train1.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train2.input.dataset]
      - [preprocess.output.preprocessed_mnist.npz, train3.input.dataset]
      - [train1.output.model*, evaluate1.input.model]
      - [train2.output.model*, evaluate2.input.model]
      - [train3.output.model*, evaluate3.input.model]
      - [evaluate1.output.*.json, find-best-model.input.predictions]
      - [evaluate2.output.*.json, find-best-model.input.predictions]
      - [evaluate3.output.*.json, find-best-model.input.predictions]
      - [evaluate1.input.model*, find-best-model.input.models]
      - [evaluate2.input.model*, find-best-model.input.models]
      - [evaluate3.input.model*, find-best-model.input.models]
      - [find-best-model.output.model*, deploy.file.predict-digit.model]

- endpoint:
    name: greet
    image: python:3.9
    port: 8000
    server-command: python -m wsgiref.simple_server

- endpoint:
    name: predict-digit
    description: predict digits from image inputs ("file" parameter)
    image: tensorflow/tensorflow:2.6.0
    wsgi: predict:predict
    files:
      - name: model
        description: Model output file from TensorFlow
        path: model.h5


- pipeline:
    name: three-trainings-pipeline-dynamic
    parameters:
      - name: epochs
        targets:
          - train.parameters.epochs
        default: 5
      - name: learning_rate
        targets:
          - train.parameters.learning_rate
        default: 0.01
    nodes:
      - name: preprocess
        type: execution
        step: preprocess-dataset
      - name: train
        type: task
        step: train-model
        override:
          inputs:
            - name: dataset
      - name: evaluate
        type: execution
        step: batch-inference
      - name: find-best-model
        type: execution
        step: compare-predictions
    edges:
      - [preprocess.output.preprocessed_mnist.npz, train.input.dataset]
      - [train.output.model*, evaluate.input.model]
      - [evaluate.output.*.json, find-best-model.input.predictions]
